{
	"name": "bronze_to_silver",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "SourceDataset_zwr",
						"type": "DatasetReference"
					},
					"name": "srcbronze"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "silver_parquet",
						"type": "DatasetReference"
					},
					"name": "tosilver"
				}
			],
			"transformations": [
				{
					"name": "DistinctRows"
				},
				{
					"name": "LookForNULLs"
				}
			],
			"scriptLines": [
				"source(output(",
				"          municipio_cod as string,",
				"          municipio_fato as string,",
				"          data_fato as string,",
				"          mes as integer,",
				"          ano as integer,",
				"          risp as string,",
				"          rmbh as string,",
				"          natureza_delito as string,",
				"          tentado_consumado as string,",
				"          qtde_vitimas as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> srcbronze",
				"srcbronze aggregate(groupBy(mycols = sha2(256,columns())),",
				"     each(match(true()), $$ = first($$))) ~> DistinctRows",
				"DistinctRows split(contains(array(toString(columns())),isNull(#item)),",
				"     disjoint: false) ~> LookForNULLs@(hasNULLs, noNULLs)",
				"LookForNULLs@noNULLs sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> tosilver"
			]
		}
	}
}